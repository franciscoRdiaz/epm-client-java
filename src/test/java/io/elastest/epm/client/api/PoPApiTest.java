/*
 * EPM REST API
 * REST API description of the ElasTest Platform Manager Module.
 *
 * OpenAPI spec version: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.elastest.epm.client.api;

import io.elastest.epm.client.ApiException;
import io.elastest.epm.client.model.PoP;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for PoPApi
 */
@Ignore
public class PoPApiTest {

    private final PoPApi api = new PoPApi();

    
    /**
     * Returns all PoPs.
     *
     * Returns all PoPs with all its details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllPoPsTest() throws ApiException {
        List<PoP> response = api.getAllPoPs();

        // TODO: test validations
    }
    
    /**
     * Returns a PoP.
     *
     * Returns the PoP with the given ID. Returns all its details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPoPByIdTest() throws ApiException {
        String id = null;
        PoP response = api.getPoPById(id);

        // TODO: test validations
    }
    
    /**
     * Registers a new PoP
     *
     * Registers a new Point-of-Presence represented by a PoP
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerPoPTest() throws ApiException {
        PoP body = null;
        PoP response = api.registerPoP(body);

        // TODO: test validations
    }
    
    /**
     * Unregisters a PoP.
     *
     * Unregisters the PoP that matches with a given ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unregisterPoPTest() throws ApiException {
        String id = null;
        String response = api.unregisterPoP(id);

        // TODO: test validations
    }
    
    /**
     * Updates a PoP.
     *
     * Updates an already registered PoP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePoPTest() throws ApiException {
        String id = null;
        PoP body = null;
        PoP response = api.updatePoP(id, body);

        // TODO: test validations
    }
    
}
