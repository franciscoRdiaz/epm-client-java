/*
 * EPM REST API
 * REST API description of the ElasTest Platform Manager Module.
 *
 * OpenAPI spec version: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.elastest.epm.client.api;

import io.elastest.epm.client.ApiException;
import io.elastest.epm.client.model.CommandExecutionBody;
import java.io.File;
import io.elastest.epm.client.model.FileDownloadBody;
import io.elastest.epm.client.model.FileUploadBody;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for RuntimeApi
 */
@Ignore
public class RuntimeApiTest {

    private final RuntimeApi api = new RuntimeApi();

    
    /**
     * Downloads a file from a VDU.
     *
     * Download a file with the given filepath from the given VDU.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadFileFromInstanceTest() throws ApiException {
        String id = null;
        FileDownloadBody fileDownloadBody = null;
        File response = api.downloadFileFromInstance(id, fileDownloadBody);

        // TODO: test validations
    }
    
    /**
     * Executes given command on the given VDU.
     *
     * Executes the given command on the VDU with the given ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeOnInstanceTest() throws ApiException {
        String id = null;
        CommandExecutionBody commandExecutionBody = null;
        String response = api.executeOnInstance(id, commandExecutionBody);

        // TODO: test validations
    }
    
    /**
     * Starts the given VDU.
     *
     * Starts the VDU with the given ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startInstanceTest() throws ApiException {
        String id = null;
        api.startInstance(id);

        // TODO: test validations
    }
    
    /**
     * Stops the given VDU.
     *
     * Stops the VDU with the given ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stopInstanceTest() throws ApiException {
        String id = null;
        api.stopInstance(id);

        // TODO: test validations
    }
    
    /**
     * Uploads a file to a VDU.
     *
     * Uploads a given file to the given filepath to the given VDU.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileToInstanceByFileTest() throws ApiException {
        String id = null;
        String remotePath = null;
        File file = null;
        api.uploadFileToInstanceByFile(id, remotePath, file);

        // TODO: test validations
    }
    
    /**
     * Uploads a file to a VDU.
     *
     * Uploads a given file from the host path to the given file path to the given VDU.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileToInstanceByPathTest() throws ApiException {
        String id = null;
        FileUploadBody fileUploadBody = null;
        api.uploadFileToInstanceByPath(id, fileUploadBody);

        // TODO: test validations
    }
    
}
