/*
 * EPM REST API
 * REST API description of the ElasTest Platform Manager Module.
 *
 * OpenAPI spec version: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.elastest.epm.client.api;

import io.elastest.epm.client.ApiException;
import io.elastest.epm.client.model.ResourceGroup;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for ResourceGroupApi
 */
@Ignore
public class ResourceGroupApiTest {

    private final ResourceGroupApi api = new ResourceGroupApi();

    
    /**
     * Creates a new Resource Group.
     *
     * Creates a new Resource Group and allocates the defined resources in the defined PoPs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createResourceGroupTest() throws ApiException {
        ResourceGroup body = null;
        ResourceGroup response = api.createResourceGroup(body);

        // TODO: test validations
    }
    
    /**
     * Deletes a Resource Group.
     *
     * Deletes the Resource Group that matches with a given ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteResourceGroupTest() throws ApiException {
        String id = null;
        String response = api.deleteResourceGroup(id);

        // TODO: test validations
    }
    
    /**
     * Returns all Resource Groups.
     *
     * Returns all Resource Groups with all details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllResourceGroupsTest() throws ApiException {
        List<ResourceGroup> response = api.getAllResourceGroups();

        // TODO: test validations
    }
    
    /**
     * Returns a Resource Group.
     *
     * Returns the Resource Group with the given ID. Returns all its details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResourceGroupByIdTest() throws ApiException {
        String id = null;
        ResourceGroup response = api.getResourceGroupById(id);

        // TODO: test validations
    }
    
    /**
     * Updates a ResourceGroup.
     *
     * Updates an existing ResourceGroup.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateResourceGroupTest() throws ApiException {
        String id = null;
        ResourceGroup body = null;
        ResourceGroup response = api.updateResourceGroup(id, body);

        // TODO: test validations
    }
    
}
