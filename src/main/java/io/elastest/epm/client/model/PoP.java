/*
 * EPM REST API
 * REST API description of the ElasTest Platform Manager Module.
 *
 * OpenAPI spec version: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.elastest.epm.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * This entity contains information about the Point-of-Presence (PoP)
 */
@ApiModel(description = "This entity contains information about the Point-of-Presence (PoP)")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-23T16:53:27.371+02:00")
public class PoP {
  @SerializedName("accessInfo")
  private List<KeyValuePair> accessInfo = new ArrayList<KeyValuePair>();

  @SerializedName("id")
  private String id = null;

  @SerializedName("interfaceEndpoint")
  private String interfaceEndpoint = null;

  @SerializedName("interfaceInfo")
  private List<KeyValuePair> interfaceInfo = new ArrayList<KeyValuePair>();

  @SerializedName("name")
  private String name = null;

  public PoP accessInfo(List<KeyValuePair> accessInfo) {
    this.accessInfo = accessInfo;
    return this;
  }

  public PoP addAccessInfoItem(KeyValuePair accessInfoItem) {
    this.accessInfo.add(accessInfoItem);
    return this;
  }

   /**
   * Authentication credentials for accessing the PoP. Examples may include those to support different authentication schemes, e.g. OAuth, Token, etc.
   * @return accessInfo
  **/
  @ApiModelProperty(example = "null", required = true, value = "Authentication credentials for accessing the PoP. Examples may include those to support different authentication schemes, e.g. OAuth, Token, etc.")
  public List<KeyValuePair> getAccessInfo() {
    return accessInfo;
  }

  public void setAccessInfo(List<KeyValuePair> accessInfo) {
    this.accessInfo = accessInfo;
  }

  public PoP id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the PoP
   * @return id
  **/
  @ApiModelProperty(example = "1234-abcd", value = "Identifier of the PoP")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PoP interfaceEndpoint(String interfaceEndpoint) {
    this.interfaceEndpoint = interfaceEndpoint;
    return this;
  }

   /**
   * Information about the interface endpoint. An example is a URL.
   * @return interfaceEndpoint
  **/
  @ApiModelProperty(example = "localhost", required = true, value = "Information about the interface endpoint. An example is a URL.")
  public String getInterfaceEndpoint() {
    return interfaceEndpoint;
  }

  public void setInterfaceEndpoint(String interfaceEndpoint) {
    this.interfaceEndpoint = interfaceEndpoint;
  }

  public PoP interfaceInfo(List<KeyValuePair> interfaceInfo) {
    this.interfaceInfo = interfaceInfo;
    return this;
  }

  public PoP addInterfaceInfoItem(KeyValuePair interfaceInfoItem) {
    this.interfaceInfo.add(interfaceInfoItem);
    return this;
  }

   /**
   * Information about the interface(s) to the PoP, including PoP provider type, API version, and protocol type.
   * @return interfaceInfo
  **/
  @ApiModelProperty(example = "&quot;[{&amp;quot;key&amp;quot;:&amp;quot;type&amp;quot;,&amp;quot;value&amp;quot;:&amp;quot;docker&amp;quot;}]&quot;", required = true, value = "Information about the interface(s) to the PoP, including PoP provider type, API version, and protocol type.")
  public List<KeyValuePair> getInterfaceInfo() {
    return interfaceInfo;
  }

  public void setInterfaceInfo(List<KeyValuePair> interfaceInfo) {
    this.interfaceInfo = interfaceInfo;
  }

  public PoP name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Human-readable identifier of this PoP information element
   * @return name
  **/
  @ApiModelProperty(example = "testPoPName", required = true, value = "Human-readable identifier of this PoP information element")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoP poP = (PoP) o;
    return Objects.equals(this.accessInfo, poP.accessInfo) &&
        Objects.equals(this.id, poP.id) &&
        Objects.equals(this.interfaceEndpoint, poP.interfaceEndpoint) &&
        Objects.equals(this.interfaceInfo, poP.interfaceInfo) &&
        Objects.equals(this.name, poP.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessInfo, id, interfaceEndpoint, interfaceInfo, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoP {\n");

    sb.append("    accessInfo: ").append(toIndentedString(accessInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interfaceEndpoint: ").append(toIndentedString(interfaceEndpoint)).append("\n");
    sb.append("    interfaceInfo: ").append(toIndentedString(interfaceInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

