/*
 * EPM REST API
 * REST API description of the ElasTest Platform Manager Module.
 *
 * OpenAPI spec version: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.elastest.epm.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * FileUploadBody
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-21T16:11:00.478+02:00")
public class FileUploadBody {
  @SerializedName("remotePath")
  private String remotePath = null;

  @SerializedName("hostPath")
  private String hostPath = null;

  public FileUploadBody remotePath(String remotePath) {
    this.remotePath = remotePath;
    return this;
  }

   /**
   * Get remotePath
   * @return remotePath
  **/
  @ApiModelProperty(example = "/", required = true, value = "")
  public String getRemotePath() {
    return remotePath;
  }

  public void setRemotePath(String remotePath) {
    this.remotePath = remotePath;
  }

  public FileUploadBody hostPath(String hostPath) {
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @ApiModelProperty(example = "/", required = true, value = "")
  public String getHostPath() {
    return hostPath;
  }

  public void setHostPath(String hostPath) {
    this.hostPath = hostPath;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileUploadBody fileUploadBody = (FileUploadBody) o;
    return Objects.equals(this.remotePath, fileUploadBody.remotePath) &&
        Objects.equals(this.hostPath, fileUploadBody.hostPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(remotePath, hostPath);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileUploadBody {\n");
    
    sb.append("    remotePath: ").append(toIndentedString(remotePath)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

